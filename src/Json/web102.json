{
    "css": "./web102.css",
    "0": {
        "type": "section",
        "target": "main",
        "title": "web102Top",
        "0": {
            "type": "article",
            "title": "web102",
            "0": "<img src='./resource/web102/index.png'><p><h1>Web 102</h1></p>"
        },
        "1": {
            "type": "article",
            "title": "githubLink",
            "0": "<div class='web102Link'><a href='https://github.com/GameLikeSweet/web102' target=_blank> -> github 리포지토리 바로가기</a> </p></div>",
            "1": "<p>style을 분리하고 id와 class를 이용하여 같은 그룹의 엘리먼트를 더 쉽고 편하게 관리할 수 있도록 구성하는것을 목표로한다.</p>",
            "2": "<p>관계 연산자(Combinator Selector)와 수도 클레스 선택자(Pseudo-class Selector)등을 이용하여 원하는 대상에게 style을 적용을 하는것을 연습한다.</p>"
        },
        "2": {
            "type": "article",
            "title": "idClass",
            "0": "<h2>Id 와 Class</h2>",
            "1": "<p>Id와 class는 엘리먼트 선택자이다. id는 문서 내부에 고유식별자로 하나의 엘리먼트에만 존재 할 수 있으며 하나의 id만 존재할 수 있다.",
            "2": "반면 class는 공백을 통해서 하나의 엘리먼트에 여려개의 class를 적용시킬 수 있으며 하나의 class를 여러 엘리먼트에 적용 할 수 있다.</p>",
            "4": "<div id='id1'>This is Id</div>",
            "5": "<div class='class1'>This is Class 1</div>",
            "6": "<div class='class2'>This is Class 2</div>",
            "7": "<div class='class1 class2'>This is Class 1 and 2</div>"
        },
        "3": {
            "type": "article",
            "title": "combinator",
            "0": "<h2>Combinator 선택자</h2>",
            "1": "<p>Combinator 선택자는 다른 선택자와의 관계에 의해서 선택되어진다.</p>",
            "2": "<ol><li>공백 : 후손 선택자로 모든 후손에게 영향을준다.</li>",
            "3": "<li> > : 자식 선택자로 직계 자식에게만 영향을 준다</li>",
            "4": "<li> + : 인접 형제 선택자로 첫 번째 선택자의 다음 형제인 요소가 두 번째 선택자와 일치할때 두 번째 선택자에게 영향을 준다</li>",
            "5": "<li> ~ : 일반 형제 선택자로 첫 번째 선택자와 두번재 선택자가 순서와 상관 없이 인접시 두 번째 선택자에 영향을 준다</li></ol>"
        },
        "4": {
            "type": "article",
            "title": "pseudoClass",
            "0": "<h2>Pseudo-Class 선택자</h2>",
            "1": "<p>Pseudo-Class 선택자는 선택자에 추가하는 키워드로, 선택한 요소가 특별한 상태여야 적용된다.",
            "2:": " : (콜론)을 통해서 표현하며 클래스 이름인 정해져 있다. </p>",
            "3": "<div class='hoverTest'>pseudoClass:hover<br>마우스를 올리면 적용</div>",
            "4" : "<div class='activeTest'>pseudoClass:active<br>마우스 클릭 중 적용</div>"
        }
    },
    "1": {
        "type": "section",
        "target": "main",
        "title": "web102Mid",
        "0": {
            "type": "article",
            "title": "web102Html",
            "0": "<img src='./resource/web102/html.png'>"
        },
        "1" : {
            "type":"article",
            "title" : "indexHtml",
            "0" : "<p>index.html 내부에 style을 추가하였으며 이렇게 만든 선택자들을 이용하여 같은 class를 가진 엘리먼트들을 한번에 관리하고 있다.",
            "1" : "style의 margin과 padding 등을 이용하여 각 엘리먼트들의 위치 동적으로 적용하고있다.",
            "2" : "index.html 내부에서는 상단의 메뉴바에 pseudo-class의 hover 기능을 이용하여 동적인 느낌을 추가 하였다.</p>"

        },
        "2" : {
            "type"  : "article",
            "title" : "aboutHtml",
            "0" : "<p> about.html은 여러개의 box들의 공통적인 부분은 box라는 class로 하나로 처리하였으며 상단 사진 위의 box는 combinator을 이용하여",
            "1" : "하단의 7개의 box는 pseudo-class의 nth-child을 이용하여 각자 다른 스타일을 적용시켰다. <br>각 box의 사이즈는 160 X 160 이지만 padding을 이용하여 250 X 250 으로 구현하였다.</p>"
        }
    }
}